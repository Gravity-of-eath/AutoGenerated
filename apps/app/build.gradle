//import groovy.xml.XmlUtil

apply plugin: 'com.android.application'

android {
    compileSdkVersion 32

    defaultConfig {
        applicationId 'com.yps.autogenerated'
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
//                includeCompileClasspath true
//                annotationEnable true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
//            jniLibs.srcDirs = ['libs', '../../apps/base/build/generated/source/apt/debug']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    project.afterEvaluate {
//        android.applicationVariants.all { variant ->
//            String variantName = variant.name.capitalize()
//            def processManifestTask = project.tasks.getByName("process${variantName}Manifest")
//            processManifestTask.doLast { pmt ->
//                String manifestPath = "$pmt.manifestOutputDirectory/AndroidManifest.xml"
//                def manifest = file(manifestPath).getText()
//                def xml = new XmlParser().parseText(manifest)
//
////                String servicesPath = "$pmt.manifestOutputDirectory/../../../../javac/debug/compileDebugJavaWithJavac/classes/serviceName.json"
////                def services = file(servicesPath)
////                services.eachLine {
////                    line ->
////                        generatedServiceTag(xml, line)
////                }
//                def serialize = XmlUtil.serialize(xml)
//                println("aaaa-------------------")
//                println(xml)
//                file(manifestPath).write(serialize)
////                }
//            }
//
//        }
//    }
}

//void generatedServiceTag(Node node, String service) {
//    node.application[0].appendNode("service", ['android:name': service, 'android:enabled': "true", 'android:exported': "true"])
//            .appendNode("intent-filter").appendNode("action", ['android:name': service])
//
//}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.android.material:material:1.5.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':base')
    compileOnly project(path: ':compiler')
    annotationProcessor project(':compiler')
}